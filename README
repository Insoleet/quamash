=======
Quamash
=======
Implementation of the `PEP 3156`_ Event-Loop with Qt
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:author: Mark Harviston <mark.harviston@gmail.com>, Arve Knudsen <arve.knudsen@gmail.com>

Requirements
============
Quamash requires Python 3.4 and either PyQt 5 or PySide.

Usage
=====

.. code:: python

	import quamash
	import time
	import asyncio
	import sys

	try:
		from PyQt5.QtWidgets import QApplication, QMainWindow
	except ImportError:
		from PySide.QtGui import QApplication, QMainWindow


	def identity(x):
		time.sleep(10)
		return x


	@asyncio.coroutine
	def my_task():
		for x in range(5):
			# Execute function in thread since it blocks
			y = yield from loop.run_in_executor(None, identity, x)
			assert x == y

		loop.stop()


	if __name__ == '__main__':
		app = QApplication(sys.argv)

		win = QMainWindow()
		win.show()

		loop = quamash.QEventLoop(app)
		with loop:
			loop.run_until_complete(my_task())

Testing
=======
Quamash is tested with `pytest`_; in order to run the test suite, just execute py.test on the
commandline. The tests themselves are beneath the 'tests' directory.

Name
====
Tulip related projects are being named after other flowers, Quamash is one of the few flowers that
starts with a "Q".

.. _`PEP 3156`: http://legacy.python.org/dev/peps/pep-3156/
.. _`pytest`: http://pytest.org
